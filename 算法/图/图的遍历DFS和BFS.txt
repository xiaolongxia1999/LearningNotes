具体见：https://blog.csdn.net/luoshixian099/article/details/51897538

DFS,深度优先搜索――――――――先把某条路径上的节点遍历完，再到下一路径
	
1.从图中某个顶点v0v0出发，首先访问v0v0; 
2.访问结点v0v0的第一个邻接点，以这个邻接点vtvt作为一个新节点，访问vtvt所有邻接点。直到以vtvt出发的所有节点都被访问到，回溯到v0v0的下一个未被访问过的邻接点，以这个邻结点为新节点，重复上述步骤。直到图中所有与v0v0相通的所有节点都被访问到。 
3.若此时图中仍有未被访问的结点，则另选图中的一个未被访问的顶点作为起始点。重复深度优先搜索过程，直到图中的所有节点均被访问过。

注意：第2步，就是个递归搜索。 因为vt的一个邻接点如果是多个，就需要采取同搜索vt一样的操作，即递归。


BFS，广度优先搜索

	1.从顶点v0出发， 先找出v0的所有邻接列表list1（有序），即找出所有步长为1顶点

	2.从list1中的所有顶点，依次找出各自的邻接列表List2（有序），相对于v0就是步长为2的所有顶点
		2.1在List1中，假设vi和vj为顶点，且vi在列表靠前位置，他们的邻接列表的交集非空（即他们的部分邻接点，是重复的），则vi访问过的点会被标记，vj不会去访问与vi相交的重复点。――如果vj要访问的点，全部已经被访问过，该条路径就停止搜索。

	3.重复步骤2，生成List3，如此循环

	直到第K步，最后一个节点被访问（指之前从未访问过的），停止搜索，至此顶点全部遍历。
	
	
